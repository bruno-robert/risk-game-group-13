//============================================================================
// Name        : GameStatsObserver.cpp
// Team        : Group 13
// Team members: Bruno Robert 40003443, Jeffrey Maher 40018878, Sabrina Rieck 40032864, Simon Roy 40030996
// Version     : 1.2
// Copyright   : GNU Public license 3
// Description : Prints update "players world domination view" as the state of the map changes
//============================================================================

//#include "GameStatsObserver.h"
#include "Observer.h"
#include "Player.h"
#include <iostream>
#include <vector>

class GameStatsObserver: public Observer { //TO REMOVE
    private:
    vector<Player*> subjects; //FOR H FILE
    
    public:
    GameStatsObserver(vector<Player*> playerList) {
        //Make the players the subjects
        subjects = playerList;
        
        //Attack observer to each each subject
        for (Player* p : playerList)
            p->attach(this);   
    }
    
    ~GameStatsObserver() { 
        for (Player* p : subjects)
            p->attach(this);
    }
    
    void update(string message){
        
        if(message == "map change")
            printMapStats();
        
        //Else do nothing, the notify is not directed to this observer
        
    }
    
    void printMapStats(){
        
        int i = 1;
        
        cout << "Map Ownership: ";
        
        for (Player* p : subjects)
        {
            vector<CountryNode*> ownedCountries = p->getCountry();
                      
            for(CountryNode* c : ownedCountries)
                cout << i;
            
            i++;
        }
        
        cout << "\n";
    }
    
}; //TO REMOVE

int main (){
    
    Map map;
    
    //creating continents
    ContinentNode europe("Europe", 5);
    ContinentNode northAmerica("North America", 5);
    ContinentNode southAmerica("south America", 5);
    ContinentNode asia("Asia", 9);
    asia.addAdjCont(&europe);
    europe.addAdjCont(&asia);
    europe.addAdjCont(&northAmerica);
    northAmerica.addAdjCont(&europe);
    northAmerica.addAdjCont(&southAmerica);
    southAmerica.addAdjCont(&northAmerica);
    
    //creating countries
    CountryNode mongolia("Mongolia", &europe);
    CountryNode france("France", &europe);
    CountryNode uk("U.K.", &europe);
    CountryNode spain("Spain", &europe);
    CountryNode china ("China", &asia);
    CountryNode canada("Canada", &northAmerica);
    CountryNode usa("USA", &northAmerica);
    
    china.addAdjCount(&mongolia);
    mongolia.addAdjCount(&china);
    mongolia.addAdjCount(&france);
    france.addAdjCount(&mongolia);
    france.addAdjCount(&uk);
    france.addAdjCount(&spain);
    uk.addAdjCount(&france);
    spain.addAdjCount(&france);
    canada.addAdjCount(&usa);
    usa.addAdjCount(&canada);
    
    //adding nodes to map
    map.addContinent(&europe);
    map.addContinent(&northAmerica);
    map.addContinent(&southAmerica);
    map.addContinent(&asia);
    map.addCountry(&mongolia);
    map.addCountry(&france);
    map.addCountry(&uk);
    map.addCountry(&spain);
    map.addCountry(&china);
    map.addCountry(&canada);
    map.addCountry(&usa);
    
    //Assigning army personnel to countries
    china.setNumberOfTroops(1);
    mongolia.setNumberOfTroops(5);
    france.setNumberOfTroops(6);
    spain.setNumberOfTroops(4);
    uk.setNumberOfTroops(10);
    canada.setNumberOfTroops(3);
    usa.setNumberOfTroops(18);
    
    //Creating dice for players
    Dice dice1, dice2, dice3;
    
    //Creating hand of cards for players
    Hand hand1, hand2, hand3;
            
    //Assigning countries to player 1
    vector<CountryNode *> player1Countries;
      
    //Assigning countries to player 2
    vector<CountryNode *> player2Countries;
        
    //Assigning countries to player 3
    vector<CountryNode *> player3Countries;
        
    //Creating players
    Player player1 = Player (player1Countries, hand1, dice1);
    Player player2 = Player (player2Countries, hand2, dice2);
    Player player3 = Player (player3Countries, hand3, dice3);
    
    //Adding players to list
    vector<Player *> playerList;
    playerList.push_back(&player1);
    playerList.push_back(&player2);
    playerList.push_back(&player3);
    
    //Creating observer
    GameStatsObserver gameStatsObserver(playerList);
    
    cout << "Assigning each player a country" <<endl;
    player1Countries.push_back(&mongolia);
    player1.setCountry(player1Countries);
    
    player2Countries.push_back(&uk);
    player2.setCountry(player1Countries);
    
    player3Countries.push_back(&canada);
    player3.setCountry(player1Countries);
    
    cout << "Assigning each player a second country" <<endl;
    //Assigning countries to player 1
    player1Countries.push_back(&china);
    player1.setCountry(player1Countries);
    
    //Assigning countries to player 2
    player2Countries.push_back(&spain);
    player2.setCountry(player1Countries);
    
    //Assigning countries to player 3
    player3Countries.push_back(&usa);
    player3.setCountry(player1Countries);
    
    cout << "Assigning player 1 a third country" <<endl;
    player1Countries.push_back(&france);
    player1.setCountry(player1Countries);
}
